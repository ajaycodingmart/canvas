{
  "_args": [
    [
      {
        "raw": "jss-rtl@^0.2.1",
        "scope": null,
        "escapedName": "jss-rtl",
        "name": "jss-rtl",
        "rawSpec": "^0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "/home/ajay/MyProjects/react-practice/canvas/node_modules/material-ui"
    ]
  ],
  "_from": "jss-rtl@>=0.2.1 <0.3.0",
  "_id": "jss-rtl@0.2.1",
  "_inCache": true,
  "_location": "/jss-rtl",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/jss-rtl-0.2.1.tgz_1507749116605_0.6995370134245604"
  },
  "_npmUser": {
    "name": "alitaheri",
    "email": "ali.taheri.m@gmail.com"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jss-rtl@^0.2.1",
    "scope": null,
    "escapedName": "jss-rtl",
    "name": "jss-rtl",
    "rawSpec": "^0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-ui"
  ],
  "_resolved": "https://registry.npmjs.org/jss-rtl/-/jss-rtl-0.2.1.tgz",
  "_shasum": "06fcde4a9369f8c6f660b700f1c68a5d7742eebb",
  "_shrinkwrap": null,
  "_spec": "jss-rtl@^0.2.1",
  "_where": "/home/ajay/MyProjects/react-practice/canvas/node_modules/material-ui",
  "author": {
    "name": "Ali Taheri Moghaddar",
    "email": "ali.taheri.m@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/alitaheri/jss-rtl/issues"
  },
  "dependencies": {
    "rtl-css-js": "^1.7.0"
  },
  "description": "Flip styles using rtl-css-js",
  "devDependencies": {
    "@types/chai": "^4.0.4",
    "@types/mocha": "^2.2.43",
    "@types/node": "^8.0.34",
    "chai": "^4.1.2",
    "jss": "^9.0.0",
    "mocha": "^4.0.1",
    "rimraf": "^2.6.2",
    "ts-loader": "^2.3.7",
    "ts-node": "^3.3.0",
    "tslint": "^5.7.0",
    "tslint-eslint-rules": "^4.1.1",
    "tslint-microsoft-contrib": "^5.0.1",
    "typescript": "^2.5.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-fvCsICgCz4N0hGhAAK9mikOoMSeeAnmhdXHkS9/JO9Z3zzRfHSURU6eRiXingxoFyv1O97sILlR2nFNudAZlYg==",
    "shasum": "06fcde4a9369f8c6f660b700f1c68a5d7742eebb",
    "tarball": "https://registry.npmjs.org/jss-rtl/-/jss-rtl-0.2.1.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "443b3a3d8ec4618a31faa2805b921fb4a4c2563d",
  "homepage": "https://github.com/alitaheri/jss-rtl#readme",
  "keywords": [
    "cssinjs",
    "css-in-js",
    "css in js",
    "jss",
    "plugin",
    "rtl",
    "css-rtl-js",
    "reset"
  ],
  "license": "MIT",
  "main": "lib/main.js",
  "maintainers": [
    {
      "name": "alitaheri",
      "email": "ali.taheri.m@gmail.com"
    }
  ],
  "name": "jss-rtl",
  "optionalDependencies": {},
  "peerDependencies": {
    "jss": "^9.0.0"
  },
  "readme": "# RTL Support for [jss](https://github.com/cssinjs/jss)\n\nThis plugin enables right-to-left support by flipping every rule on the x-axis.\nInternally, it's wrapping [rtl-css-js](https://github.com/kentcdodds/rtl-css-js).\n\nYou can write your application left-to-right and then turn it into right-to-left using this plugin.\nOr you can start right-to-left and turn it into left-to-right.\n\nMake sure you read [how to use\nplugins](https://github.com/cssinjs/jss/blob/master/docs/setup.md#setup-with-plugins)\nin general.\n\n**Important Notice**: This plugin must come last in the plugin array since it only transforms\nraw styles.\n\n## Installation\n\nYou can install this package with the following command:\n\n```sh\nnpm install jss-rtl\n```\n\n## Examples\n\nThese examples will give you a brief overview of how this library is used:\n\n\n### Simple Usage\n\nYou can use `jss.use(...)` to augment the global `jss` instance.\n\n```javascript\nimport jss from 'jss';\nimport rtl from 'jss-rtl';\n\njss.use(rtl());\n\nconst styles = {\n  foo: {\n    'padding-left': '2px',\n    'margin-right': '2px',\n  },\n  bar: {\n    'transform': 'translate3d(30%, 20%, 10%)',\n  },\n  baz: {\n    flip: false, // opt-out of conversion for a specific rule-set\n    'margin-right': '1px',\n  },\n};\n\njss.createStyleSheet(styles); /* =>\n.foo-0-0 {\n  padding-right: 2px;\n  margin-left: 2px;\n}\n.bar-0-1 {\n  transform: translate3d(-30%, 20%, 10%);\n}\n.baz-0-2 {\n  margin-right: 1px;\n}\n*/\n```\n\nOr you can use the `jss-preset-default` library and append this one to the end.\n\n```javascript\nimport { create } from 'jss';\nimport preset from 'jss-preset-default';\nimport rtl from 'jss-rtl';\n\nconst presets = preset().plugins;\n\nconst jss = create({ plugins: [...presets, rtl()] });\n\n// ...\n```\n\n## Opting-out for an entire sheet\n\nYou can opt-out for a sheet entirely.\n\n```javascript\nconst styles = {\n  foo: {\n    'padding-left': '2px',\n    'margin-right': '2px',\n  },\n  baz: {\n    flip: true, // rules take precedence, this one is forced to flip\n    'margin-right': '1px',\n  },\n};\n\njss.createStyleSheet(styles, { flip: false }); /* =>\n.foo-0-0 {\n  padding-left: 2px;\n  margin-right: 2px;\n}\n.baz-0-1 {\n  margin-left: 1px;\n}\n*/\n```\n\n## Option `enabled`\n\nWhile using this library you might add `flip: false` or `flip: true` to some of your\nrule-sets. It is recommended that you disable this plugin instead of removing it\nfrom the plugins array so that it can at least remove the `flip` props from your rule-sets.\n\n```javascript\njss.use(rtl({ enabled: false }));\n\nconst styles = {\n  foo: {\n    'padding-left': '2px',\n    'margin-right': '2px',\n  },\n  baz: {\n    flip: true, // This gets overruled by enable: false, and gets removed from the rule-set\n    'margin-right': '1px',\n  },\n};\n\n// Doesn't matter, rtl is disabled entirely\njss.createStyleSheet(styles, { flip: true }); /* =>\n.foo-0-0 {\n  padding-left: 2px;\n  margin-right: 2px;\n}\n.baz-0-1 {\n  margin-right: 1px;\n}\n*/\n```\n\n## Option `opt`\n\nIt's also possible to change the default behavior to `opt-in`.\n\n```javascript\njss.use(rtl({ opt: 'in' }));\n\nconst styles = {\n  foo: { // This is ignored by the plugin\n    'padding-left': '2px',\n    'margin-right': '2px',\n  },\n  baz: {\n    flip: true, // This gets flipped\n    'margin-right': '1px',\n  },\n};\n\njss.createStyleSheet(styles); /* =>\n.foo-0-0 {\n  padding-left: 2px;\n  margin-right: 2px;\n}\n.baz-0-1 {\n  margin-left: 1px;\n}\n*/\n\n// Or opt-in an entire sheet\n\nconst styles = {\n  foo: {\n    'padding-left': '2px',\n    'margin-right': '2px',\n  },\n  baz: {\n    'margin-right': '1px',\n  },\n};\n\njss.createStyleSheet(styles, { flip: true }); /* =>\n.foo-0-0 {\n  padding-right: 2px;\n  margin-left: 2px;\n}\n.baz-0-1 {\n  margin-left: 1px;\n}\n*/\n```\n\n## Typings\n\nThe typescript type definitions are also available and are installed via npm.\n\n## License\nThis project is licensed under the [MIT license](https://github.com/alitaheri/jss-rtl/blob/master/LICENSE).",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/alitaheri/jss-rtl.git"
  },
  "scripts": {
    "build": "rimraf lib && tsc",
    "lint": "tslint -e \"node_modules/**\" \"**/*.ts\"",
    "prepublishOnly": "npm run build",
    "test": "mocha --compilers ts:ts-node/register \"src/**/*.spec.ts\""
  },
  "types": "lib/main.d.ts",
  "version": "0.2.1"
}
